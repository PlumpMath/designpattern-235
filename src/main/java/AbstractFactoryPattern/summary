抽象工厂模式角色划分
抽象产品（或者产品接口），如上文类图中的ICar,IShip,IPlane
具体产品，如BenzCar,BenzShip,BenzPlane,BMWCar,BMWShip,BMWPlane,LandRoverCar,LandRoverShip,LandRoverPlane
抽象工厂（或者工厂接口），如IFactory
具体工厂，如果BenzFactory,BMWFactory,LandRoverFactory
产品族，如Benz产品族

抽象工厂模式优点
因为每个具体工厂类只负责创建产品，没有简单工厂中的逻辑判断，因此符合单一职责原则。
与简单工厂模式不同，抽象工厂并不使用静态工厂方法，可以形成基于继承的等级结构。
新增一个产品族时，只需要增加相应的具体产品和对应的具体工厂类即可。相比于简单工厂模式需要修改判断逻辑而言，抽象工厂模式更符合开-闭原则。

抽象工厂模式缺点
新增产品种类时，需要修改工厂接口（或者抽象工厂）及所有具体工厂，此时不符合开-闭原则。抽象工厂模式对于新的产品族符合开-闭原则而对于新的产品种类不符合开-闭原则，这一特性也被称为开-闭原则的倾斜性。

已遵循的原则
依赖倒置原则（工厂构建产品的方法均返回产品接口而非具体产品，从而使客户端依赖于产品抽象而非具体）
迪米特法则
里氏替换原则
接口隔离原则
单一职责原则（每个工厂只负责创建自己的具体产品族，没有简单工厂中的逻辑判断）
开闭原则（增加新的产品族，不像简单工厂那样需要修改已有的工厂，而只需增加相应的具体工厂类）

未遵循的原则
开闭原则（虽然对新增产品族符合开-闭原则，但对新增产品种类不符合开-闭原则）

